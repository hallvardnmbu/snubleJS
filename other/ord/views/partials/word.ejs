<% if (!word) { %>

  <section">
    <div class="message">Noe gikk galt.</div>
  </section>

<% } else { %>

  <section>
      <div class="top">
        <div class="words">
          <div class="word"><%= word.word %></div>
          <% if (word.pronunciation && word.pronunciation.length > 0) { %>
              <div class="pronunciation">[<%= word.pronunciation %>]</div>
          <% } %>
        </div>
        <div class="group"><%= word.wordgroup.includes(',') ? word.wordgroup.split(",")[0] : word.wordgroup %></div>
      </div>

      <% if (word.etymology) { %>
        <% word.etymology.forEach(function(etymology) { %>
            <div class="etymology"><%= etymology %></div>
        <% }); %>
      <% } %>

      <hr />

      <%
      // Dictionary-specific key mappings
      const keyMappings = {
        'nn': {
          'eksempel': 'døme',
          'forklaring': 'tyding og bruk',
          'underartikkel': 'faste uttrykk'
        }
      };

      // Helper function to translate keys based on dictionary type
      function translateKey(key, dictionaryType) {
        if (dictionaryType && keyMappings[dictionaryType] && keyMappings[dictionaryType][key]) {
          return keyMappings[dictionaryType][key];
        }
        return key;
      }
      %>

      <% function renderDefinitions(data, indent = 1, dictionaryType = "bm") { %>
          <% if (Array.isArray(data)) { %>
              <% data.forEach(item => { %>
                  <% if (typeof item === 'object' && item !== null) { %>
                      <%= renderDefinitions(item, indent, dictionaryType) %>
                  <% } else { %>
                      <div class="definition" style="--indent: <%= indent %>;"><%- item %></div>
                  <% } %>
              <% }); %>
          <% } else if (typeof data === 'object' && data !== null) { %>
              <% for (const [key, value] of Object.entries(data)) { %>
                <% indent += 1 %>
                <% const translatedKey = translateKey(key, dictionaryType) %>
                <div class="define" style="--indent: <%= indent %>;"><b><%= translatedKey %></b></div>
                <% if (key === "underartikkel") { %>
                  <% for (const element of value) { %>
                    <div class="definition" style="--indent: <%= indent %>;">
                      <a href="https://ordbokene.no/nob/bm/<%= element.id %>" target="_blank"><%= element.word %></a>
                    </div>
                    <%= renderDefinitions(element.definitions, indent, dictionaryType) %>
                  <% } %>
                <% } else if (key === "eksempel") { %>
                  <%= renderDefinitions(value, indent, dictionaryType) %>
                <% } else { %>
                  <%= renderDefinitions(value, indent, dictionaryType) %>
                <% } %>
              <% } %>
          <% } else { %>
              <div class="definition" style="--indent: <%= indent %>;"><%= data %></div>
          <% } %>
      <% } %>

      <% if (word.definitions) { %>
        <% for (const [type, values] of Object.entries(word.definitions)) { %>
            <% const translatedType = translateKey(type, word.dictionary) %>
            <div class="define"><b><%= translatedType %></b></div>
            <% if (type === "underartikkel") { %>
              <% for (const element of values) { %>
                <div class="define" style="--indent: 2;">
                  <a href="https://ordbokene.no/nob/bm/<%= element.id %>" target="_blank"><%= element.word %></a>
                </div>
                <%= renderDefinitions(element.definitions, 1, word.dictionary) %>
              <% } %>
            <% } else { %>
              <%= renderDefinitions(values, 1, word.dictionary) %>
            <% } %>
        <% } %>
      <% } %>

      <% if (word.inflection && word.inflection[0] && word.inflection[0].length > 1) { %>
        <button class="toggleInflection" id="toggleInflection-<%= word.dictionary %>" onclick="toggleInflection('<%= word.dictionary %>')">
          bøying
        </button>

        <script>
        function toggleInflection(dictionaryId) {
            const button = document.getElementById(`toggleInflection-${dictionaryId}`);
            const inflection = document.getElementById(`inflection-${dictionaryId}`);

            // Toggle button text
            button.textContent = button.textContent.trim() === 'bøying'
                ? 'skjul'
                : 'bøying';

            // Toggle inflection table visibility
            inflection.style.display = inflection.style.display === 'table' ? 'none' : 'table';
        }
        </script>

        <%
        // Dictionary-specific key mappings
        const inflectionMappings = {
          'bm': {
            'Inf': 'infinitiv',
            'Pres': 'presens',
            'Past': 'preteritum',
            'Imp': 'imperativ',
            '<PerfPart>': 'perfektum partisipp',
            'PerfPart': 'perfektum partisipp',
            'Perf Part': 'perfektum partisipp',
            '<PresPart>': 'presens partisipp',
            'PresPart': 'presens partisipp',
            'Pres Part': 'presens partisipp',
            'Sing': 'entall',
            'Pos': '',
            'Ind': '',
            'Adj': '',
            '<SPass>': '',
            'Cmp': 'komparativ',
            'Sup': 'superlativ',
            'Pass': 'passiv',
            'Plur': 'flertall',
            'Masc': 'hankjønn',
            'Fem': 'hunkjønn',
            'Masc/Fem': 'hankjønn/hunkjønn',
            'Neut': 'intetkjønn',
            'Neuter': 'intetkjønn',
            'Def': 'bestemt',
            'Indef': 'ubestemt'
          },
          'nn': {
            'Inf': 'infinitiv',
            'Pres': 'presens',
            'Past': 'preteritum',
            'Imp': 'imperativ',
            '<PerfPart>': 'perfektum partisipp',
            'PerfPart': 'perfektum partisipp',
            'Perf Part': 'perfektum partisipp',
            '<PresPart>': 'presens partisipp',
            'PresPart': 'presens partisipp',
            'Pres Part': 'presens partisipp',
            'Sing': 'eintal',
            'Pos': '',
            'Ind': '',
            'Adj': '',
            '<SPass>': '',
            'Cmp': 'komparativ',
            'Sup': 'superlativ',
            'Pass': 'passiv',
            'Plur': 'fleirtal',
            'Masc': 'hankjønn',
            'Fem': 'hokjønn',
            'Masc/Fem': 'hankjønn/hokjønn',
            'Neut': 'inkjekjønn',
            'Neuter': 'inkjekjønn',
            'Def': 'bunden',
            'Indef': 'ubunden'
          },
        };

        // Helper function to translate keys based on dictionary type
        function processInflection(tag, dictionary) {
          let updatedTag = tag;

          const tags = tag.split(" ");
          for (const key of tags) {
            if (inflectionMappings[dictionary].hasOwnProperty(key)) {
              updatedTag = updatedTag.replace(key, inflectionMappings[dictionary][key]);
            }
          }

          return updatedTag.trim().trim();
        }
        %>

        <table class="inflection" style="display: none;" id="inflection-<%= word.dictionary %>">
          <tbody>
            <% word.inflection[0].forEach(function(inflect) { %>
              <% if (inflect.word_form && !(inflect.tags ? inflect.tags.join(' ') : '').includes(' Pass')) { %>
                <tr>
                  <td class="word-cell"><%= inflect.word_form %></td>
                  <td class="form-cell"><%= processInflection(inflect.tags ? inflect.tags.join(' ') : '', word.dictionary) %></td>
                </tr>
              <% } %>
            <% }); %>
          </tbody>
        </table>

        <script>
          document.addEventListener('DOMContentLoaded', function() {
            const inflectionTable = document.getElementById('inflection-<%= word.dictionary %>');
            if (inflectionTable && inflectionTable.getElementsByTagName('tr').length < 2) {
              document.getElementById('toggleInflection-<%= word.dictionary %>').style.display = 'none';
            }
          });
        </script>
      <% } %>

  </section>

<% } %>
